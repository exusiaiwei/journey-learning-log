name: Waka Weekly Report

on:
  schedule:
    # 每周日晚上 12 点运行（UTC 时间）
    - cron: '0 0 * * 0'
  workflow_dispatch:  # 允许手动触发

jobs:
  update-weekly-report:
    name: Update Weekly Report
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install requests

      - name: Create Python script
        run: |
          cat << EOF > generate_report.py
          import requests
          import json
          from datetime import datetime, timedelta
          import calendar
          import os

          def generate_ascii_chart(percentages):
              chart = "```\n"
              for lang, percentage in percentages:
                  bar_length = int(percentage * 30 / 100)
                  chart += f"{lang.ljust(10)} {'█' * bar_length}{' ' * (30 - bar_length)} {percentage:.1f}%\n"
              chart += "```"
              return chart

          # 获取上周的日期范围
          end_date = datetime.now().replace(hour=0, minute=0, second=0, microsecond=0)
          start_date = end_date - timedelta(days=7)

          # 构建API请求
          url = "https://wakatime.com/api/v1/users/current/summaries"
          params = {
              "api_key": os.environ['WAKATIME_API_KEY'],
              "start": start_date.isoformat(),
              "end": end_date.isoformat(),
          }

          # 发送请求
          response = requests.get(url, params=params)
          data = response.json()

          # 生成报告
          report = f"""
          # 🚀 Weekly Coding Adventures 🚀

          ## 📅 {start_date.date()} to {end_date.date()}

          Welcome to this week's coding journey! Let's dive into the exciting world of bytes and algorithms.

          ---

          """

          total_week_time = sum(day['grand_total']['total_seconds'] for day in data['data'])
          languages_week = {}

          for day in data['data']:
              date = datetime.fromisoformat(day['range']['date'])
              total_time = day['grand_total']['text']

              report += f"""
          ## 🗓️ {calendar.day_name[date.weekday()]}, {date.strftime('%B %d')}

          ⏰ **Coding Time**: `{total_time}`

          ### 🔤 Languages

          """

              languages = day['languages']
              languages.sort(key=lambda x: x['total_seconds'], reverse=True)
              percentages = [(lang['name'], lang['percent']) for lang in languages[:5]]

              report += generate_ascii_chart(percentages)
              report += "\n\n---\n"

              for lang in languages:
                  if lang['name'] in languages_week:
                      languages_week[lang['name']] += lang['total_seconds']
                  else:
                      languages_week[lang['name']] = lang['total_seconds']

          report += f"""
          ## 📊 Weekly Overview

          ⏰ **Total Coding Time**: `{timedelta(seconds=int(total_week_time))}`

          ### 🏆 Top Languages This Week

          """

          languages_week = sorted(languages_week.items(), key=lambda x: x[1], reverse=True)
          percentages = [(lang, (time / total_week_time) * 100) for lang, time in languages_week[:5]]
          report += generate_ascii_chart(percentages)

          report += """

          ---

          Keep coding, keep learning, and may your bugs be few and your commits be many! 💻✨
          """

          # 保存报告
          week_number = end_date.strftime('%Y-W%V')
          os.makedirs('weekly_reports', exist_ok=True)
          with open(f"weekly_reports/report_{week_number}.md", "w") as f:
              f.write(report)
          EOF

      - name: Run Python script
        env:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
        run: python generate_report.py

      - name: Commit and push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add weekly_reports
          git commit -m "Add weekly report for $(date +'%Y-W%V')"
          git push